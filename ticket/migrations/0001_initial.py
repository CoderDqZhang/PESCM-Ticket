# Generated by Django 2.1.2 on 2019-01-14 09:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('create_time', models.DateField(auto_created=True, auto_now=True, verbose_name='创建时间')),
                ('nickname', models.CharField(default='', max_length=255, null=True, verbose_name='用户名')),
                ('user_id', models.CharField(default='', max_length=10, primary_key=True, serialize=False, verbose_name='用户id')),
                ('password', models.CharField(default='123456', max_length=16, verbose_name='密码')),
                ('status', models.IntegerField(default=0, null=True, verbose_name='甲乙区分')),
                ('desc', models.CharField(default='', max_length=255, null=True, verbose_name='负责项目')),
                ('last_login', models.DateField(verbose_name='最后登录时间')),
                ('avatar', models.ImageField(blank=True, default='image/default.png', null=True, upload_to='avatar/%Y/%m', verbose_name='头像')),
            ],
        ),
        migrations.CreateModel(
            name='AccountGroup',
            fields=[
                ('group_id', models.IntegerField(auto_created=True, primary_key=True, serialize=False)),
                ('group_status', models.IntegerField(default=0, verbose_name='群组状态')),
                ('group_name', models.CharField(max_length=255, verbose_name='群组名称')),
                ('group_menu', models.CharField(max_length=255, verbose_name='群组菜单')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_create_time', models.DateField(auto_created=True, auto_now=True, verbose_name='创建时间')),
                ('category_id', models.IntegerField(auto_created=True, primary_key=True, serialize=False, verbose_name='问题类型ID')),
                ('category_name', models.CharField(max_length=255, verbose_name='问题描述')),
                ('category_desc', models.TextField(blank=True, max_length=255, null=True, verbose_name='详细描述')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('partment_code', models.CharField(default='000000', max_length=10, primary_key=True, serialize=False, verbose_name='部门ID')),
                ('partment_desc', models.CharField(default='', max_length=255, verbose_name='部门名称')),
                ('partment_lev', models.IntegerField(default=0, verbose_name='部门级别')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('create_time', models.DateField(auto_created=True, auto_now=True, verbose_name='创建时间')),
                ('ticket_id', models.AutoField(primary_key=True, serialize=False, verbose_name='工单ID')),
                ('ticket_title', models.CharField(help_text='输入工单标题', max_length=255, verbose_name='工单标题')),
                ('ticket_desc', models.TextField(default='', help_text='输入工单详细描述', max_length=255, null=True, verbose_name='工单描述')),
                ('ticket_lev', models.IntegerField(default=0, verbose_name='紧急状态')),
                ('ticket_status', models.IntegerField(default=0, verbose_name='工单状态')),
                ('ticket_file', models.FileField(null=True, upload_to='ticket/%Y/%m/%d')),
                ('ticket_create_user', models.ForeignKey(on_delete='创建人', to='ticket.Account')),
            ],
        ),
        migrations.CreateModel(
            name='TicketConfim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=0, verbose_name='处理状态')),
                ('content', models.TextField(blank=True, null=True, verbose_name='处理描述')),
                ('confirm_time', models.DateField(blank=True, null=True, verbose_name='处理时间')),
                ('confirm_file', models.FileField(null=True, upload_to='handle/%Y/%m/%d')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket.Account', verbose_name='处理人员')),
            ],
        ),
        migrations.CreateModel(
            name='TicketModel',
            fields=[
                ('ticket_model_create_time', models.DateField(auto_created=True, auto_now=True, verbose_name='创建时间')),
                ('ticket_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='问题类型ID')),
                ('ticket_model_name', models.CharField(max_length=255, verbose_name='问题描述')),
                ('ticket_model_desc', models.TextField(blank=True, max_length=255, null=True, verbose_name='详细描述')),
                ('ticket_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket.Category', verbose_name='问题分类')),
            ],
        ),
        migrations.AddField(
            model_name='ticket',
            name='ticket_listsort',
            field=models.ManyToManyField(related_name='工单处理人员', to='ticket.TicketConfim'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='ticket_model_ticket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket.TicketModel', verbose_name='工单模型'),
        ),
        migrations.AddField(
            model_name='account',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket.Department', verbose_name='部门'),
        ),
        migrations.AddField(
            model_name='account',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ticket.AccountGroup', verbose_name='群组'),
        ),
    ]
